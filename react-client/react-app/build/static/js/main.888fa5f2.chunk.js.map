{"version":3,"sources":["components/YoutubePlayer.js","App.js","index.js"],"names":["YoutubePlayer","props","componentDidMount","window","YT","loadVideo","tag","document","createElement","src","onYouTubeIframeAPIReady","firstScriptTag","getElementsByTagName","parentNode","insertBefore","id","player","Player","videoId","events","onReady","onPlayerReady","event","target","render","this","loadVideoById","React","Component","App","someFunction","current","state","isTrue","createRef","ref","ReactDOM","getElementById"],"mappings":"sNAuDeA,E,YApDb,WAAYC,GAAO,IAAD,8BAChB,+CAGFC,kBAAoB,WAGlB,GAAKC,OAAOC,GAWV,EAAKC,gBAXS,CACd,IAAMC,EAAMC,SAASC,cAAc,UACnCF,EAAIG,IAAM,qCAGVN,OAAOO,wBAA0B,EAAKL,UAEtC,IAAMM,EAAiBJ,SAASK,qBAAqB,UAAU,GAC/DD,EAAeE,WAAWC,aAAaR,EAAKK,KAf9B,EAsBlBN,UAAY,WAAO,IACTU,EAAO,EAAKd,MAAZc,GAGR,EAAKC,OAAS,IAAIb,OAAOC,GAAGa,OAAd,yBAAuCF,GAAM,CACzDG,QAASH,EACTI,OAAQ,CACNC,QAAS,EAAKC,kBA7BF,EAkClBA,cAAgB,SAAAC,GACd,EAAKN,OAASM,EAAMC,QAnCJ,EA0ClBC,OAAS,WAAO,IACNT,EAAO,EAAKd,MAAZc,GACR,OACE,6BACE,yBAAKA,GAAE,yBAAoBA,OA9Cf,E,2EAsCJA,GACZU,KAAKT,OAAOU,cAAcX,EAAI,O,GAxCNY,IAAMC,WCwBnBC,E,YAtBb,aAAc,IAAD,8BACX,+CAOFC,aAAe,WACb,EAAKd,OAAOe,QAAQL,cAAc,gBAPlC,EAAKM,MAAQ,CACXC,QAAQ,GAEV,EAAKjB,OAASW,IAAMO,YALT,E,sEAaX,OACE,kBAAC,EAAD,CACEC,IAAKV,KAAKT,OACVD,GAAG,oB,GAjBOY,IAAMC,WCExBQ,IAASZ,OAAO,kBAAC,EAAD,MAASjB,SAAS8B,eAAe,U","file":"static/js/main.888fa5f2.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass YoutubePlayer extends React.Component {\r\n  constructor(props){\r\n    super()\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    // On mount, check to see if the API script is already loaded\r\n\r\n    if (!window.YT) { // If not, load the script asynchronously\r\n      const tag = document.createElement('script');\r\n      tag.src = 'https://www.youtube.com/iframe_api';\r\n\r\n      // onYouTubeIframeAPIReady will load the video after the script is loaded\r\n      window.onYouTubeIframeAPIReady = this.loadVideo;\r\n\r\n      const firstScriptTag = document.getElementsByTagName('script')[0];\r\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n\r\n    } else { // If script is already there, load the video directly\r\n      this.loadVideo();\r\n    }\r\n  };\r\n\r\n  loadVideo = () => {\r\n    const { id } = this.props;\r\n\r\n    // the Player object is created uniquely based on the id in props\r\n    this.player = new window.YT.Player(`youtube-player-${id}`, {\r\n      videoId: id,\r\n      events: {\r\n        onReady: this.onPlayerReady,\r\n      },\r\n    });\r\n  };\r\n\r\n  onPlayerReady = event => {\r\n    this.player = event.target;\r\n  };\r\n\r\n  loadVideoById(id){\r\n    this.player.loadVideoById(id, 0);\r\n  }\r\n\r\n  render = () => {\r\n    const { id } = this.props;\r\n    return (\r\n      <div>\r\n        <div id={`youtube-player-${id}`} />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default YoutubePlayer;\r\n","import React from 'react';\r\nimport YoutubePlayer from './components/YoutubePlayer.js';\r\n\r\nclass App extends React.Component {\r\n  constructor(){\r\n    super()\r\n    this.state = { \r\n      isTrue: true\r\n    };\r\n    this.player = React.createRef();\r\n  }\r\n\r\n  someFunction = () => {\r\n    this.player.current.loadVideoById(\"gpStPNAB7Cw\")\r\n  }\r\n\r\n  render() {\r\n    return (\r\n      <YoutubePlayer\r\n        ref={this.player}\r\n        id=\"2g811Eo7K8U\"\r\n      />\r\n    );\r\n  };\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}