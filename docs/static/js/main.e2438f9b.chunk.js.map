{"version":3,"sources":["components/YoutubeMySpotify/YoutubePlayer/index.js","api/request.js","api/spotifyApi.js","components/YoutubeMySpotify/helpers.js","components/YoutubeMySpotify/SpotifyPlayer/index.js","components/YoutubeMySpotify/SpotifyPlaylists/Playlist/index.js","components/YoutubeMySpotify/SpotifyPlaylists/styled/index.js","components/YoutubeMySpotify/SpotifyPlaylists/index.js","components/YoutubeMySpotify/styled/index.js","components/YoutubeMySpotify/index.js","components/AccountManager/AccountSummary/styled/index.js","components/AccountManager/AccountSummary/index.js","components/AccountManager/StoredUser/styled/index.js","components/AccountManager/helpers.js","components/AccountManager/StoredUser/index.js","components/AccountManager/styled/index.js","components/AccountManager/index.js","constants.js","components/Header/styled/index.js","components/Header/DropdownButton/styled/index.js","components/Header/DropdownButton/index.js","components/Header/index.js","App.js","index.js"],"names":["YoutubePlayer","props","componentDidMount","window","YT","loadVideo","tag","document","createElement","src","onYouTubeIframeAPIReady","firstScriptTag","getElementsByTagName","parentNode","insertBefore","id","player","Player","videoId","events","onReady","onPlayerReady","onStateChange","onPlayerStateChange","event","target","render","this","loadVideoById","console","log","React","Component","request","theUrl","method","accessToken","params","Promise","resolve","reject","xmlHttp","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","open","setRequestHeader","send","stringify","SpotifyApi","refreshToken","url","getNewAccessToken","access_token","_makeRequest","timeout","ms","setTimeout","SpotifyPlayer","update","a","getCurrentlyPlaying","currentlyPlaying","state","spotifyPlayer","updateYoutubePlayer","pauseSpotifyIfNearEnd","skipWhenVideoEnds","youtubePlayerState","spotifyApi","skip","updateYoutubePlayerState","data","is_playing","item","duration_ms","progress_ms","pause","isCurrentlyPlayingNew","getVideoIdFromCurrentlyPlaying","youtubeVideoId","waitForPlayerToPlay","songName","name","artistName","artists","undefined","result","lastSongId","currentlyPlayingId","setState","lastSong","SpotifyPlaylists","className","Container","styled","div","StyledPlaylist","Playlist","AccountSummaryContainer","StyledImage","Image","Name","h2","Info","p","InfoContainer","AccountSummary","profile","images","length","roundedCircle","display_name","followers","total","product","StoredUserContainer","ProfilePicture","DeleteAccount","setCurrentUser","currentUser","localStorage","setItem","getUsers","getItem","setUsers","users","StoredUser","preventBubble","e","cancelBubble","stopPropagation","deleteAccountHandler","userToDelete","newUsers","filter","user","deleteUser","updateUsers","useAccountHandler","history","push","onClick","withRouter","AccountManagerContainer","StyledButton","Button","AccountManager","storeCurrentUser","stayLoggedIn","newUserId","some","loginCallback","variant","map","index","key","location","href","getCurrentUserFromLocation","getStoredUsers","refresh_token","queryString","search","getProfile","userProfile","getUserProfile","HeaderContainer","HeaderText","StyledDropdown","Dropdown","DropdownButton","alignRight","Toggle","text","Menu","items","Object","keys","Item","Divider","Header","generateDropDownProps","generateItemsArrayFromUsers","onclick","App","loadCurrentUser","loadUsers","forceUpdate","current","createRef","path","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.e2438f9b.chunk.js","sourcesContent":["import React from 'react';\n\nclass YoutubePlayer extends React.Component {\n  constructor(props){\n    super()\n  }\n\n  componentDidMount = () => {\n    // On mount, check to see if the API script is already loaded\n\n    if (!window.YT) { // If not, load the script asynchronously\n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n\n      // onYouTubeIframeAPIReady will load the video after the script is loaded\n      window.onYouTubeIframeAPIReady = this.loadVideo;\n\n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n    } else { // If script is already there, load the video directly\n      this.loadVideo();\n    }\n  };\n\n  loadVideo = () => {\n    const { id } = this.props;\n\n    // the Player object is created uniquely based on the id in props\n    this.player = new window.YT.Player(`youtube-player-${id}`, {\n      videoId: id,\n      events: {\n        onReady: this.onPlayerReady,\n        onStateChange: this.onPlayerStateChange\n      },\n    });\n  };\n\n  onPlayerStateChange = (event) => {\n    this.props.onPlayerStateChange(event);\n  }\n\n\n  onPlayerReady = event => {\n    this.player = event.target;\n  };\n\n  loadVideoById(id){\n    this.player.loadVideoById(id, 0);\n  }\n\n  isPlayerReady(){\n    console.log(this.player.loadVideoById)\n    return (!!this.player.loadVideoById);\n  }\n\n  render = () => {\n    const { id } = this.props;\n    return (\n      <div>\n        <div id={`youtube-player-${id}`} />\n      </div>\n    );\n  };\n}\n\nexport default YoutubePlayer;\n","export default function request(theUrl, method, accessToken, params = null){\n    return new Promise((resolve, reject) => {\n        var xmlHttp = new XMLHttpRequest();\n        xmlHttp.onreadystatechange = function() {     \n            if (xmlHttp.readyState === 4 && (xmlHttp.status === 200)){\n                resolve(JSON.parse(xmlHttp.responseText));\n            }\n            if (xmlHttp.readyState === 4 && (xmlHttp.status === 204)){\n                resolve();\n            }\n            if (xmlHttp.readyState === 4){\n                reject(xmlHttp)\n            }\n        }\n\n        xmlHttp.open(method, theUrl, true); // true for asynchronous \n        if (accessToken){\n            xmlHttp.setRequestHeader('Authorization', 'Bearer ' + accessToken)\n        }\n        if (params){\n            xmlHttp.setRequestHeader('Content-Type', 'application/json');\n        }\n        xmlHttp.send(JSON.stringify(params));\n    })\n\n    //webby sux\n}\n","import request from \"./request\"\n\n\nexport default class SpotifyApi {\n    constructor(accessToken, refreshToken){\n        this.accessToken = accessToken;\n        this.refreshToken = refreshToken;\n    }\n\n    async _makeRequest(url, method, accessToken){\n        try{\n            return await request(url, method, accessToken);\n        }\n        catch (e) {\n            if (e.status === 401){\n                this.accessToken = (await this.getNewAccessToken(this.refreshToken)).access_token;\n                return request(url, method, this.accessToken);\n            }\n\n            throw e\n        }\n    }\n\n    getCurrentlyPlaying(){\n        return this._makeRequest('https://api.spotify.com/v1/me/player/currently-playing', 'GET', this.accessToken);\n    }\n\n    pause(){\n        return this._makeRequest('https://api.spotify.com/v1/me/player/pause', 'PUT', this.accessToken)\n    }\n\n    skip(){\n        return this._makeRequest('https://api.spotify.com/v1/me/player/next', 'POST', this.accessToken);\n    }\n\n    getProfile(){\n        return this._makeRequest('https://api.spotify.com/v1/me', 'GET', this.accessToken)\n    }\n\n    getNewAccessToken(refreshToken){\n        return request(`http://ec2-52-56-132-53.eu-west-2.compute.amazonaws.com:3000/refresh_token?refresh_token=${this.refreshToken}`, 'GET');\n    }\n}","export const timeout = (ms) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {resolve()}, ms)\n  })\n}","import React from \"react\";\nimport SpotifyApi from '../../../api/spotifyApi'\nimport request from '../../../api/request'\nimport { timeout } from '../helpers'\n\nconst UPDATE_CURRENTLY_PLAYING_INTERVAL_MS = 1500;\nconst END_OF_SONG_BUFFER_MS = 15000\n\n\nclass SpotifyPlayer extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      spotifyPlayer: {\n        currentlyPlaying: {\n          \n        }\n      },\n      lastSong: ''\n    }\n\n    this.youtubePlayerState = -1;\n\n    const { accessToken, refreshToken } = props\n    this.spotifyApi = new SpotifyApi(accessToken, refreshToken)\n  }\n  \n  async componentDidMount() {\n    this.update();\n  }\n\n  update = async () => {\n    try{\n      await this.getCurrentlyPlaying();\n      \n      const { spotifyPlayer: { currentlyPlaying }} = this.state;\n      \n      if(currentlyPlaying){\n        await this.updateYoutubePlayer(currentlyPlaying)\n        await this.pauseSpotifyIfNearEnd(currentlyPlaying)\n      }\n  \n      await this.skipWhenVideoEnds();\n  \n      await timeout(UPDATE_CURRENTLY_PLAYING_INTERVAL_MS);\n    }\n    catch(e){\n      console.log('e', e)\n    }\n    finally{\n      this.update(); \n    }\n  }\n\n  skipWhenVideoEnds = async () => {\n    console.log(this.youtubePlayerState);\n    if(this.youtubePlayerState === 0){\n      await this.spotifyApi.skip();\n    }\n  }\n\n  updateYoutubePlayerState = (event) => {\n    this.youtubePlayerState = event.data;\n  }\n\n  pauseSpotifyIfNearEnd = async (currentlyPlaying) => {\n    if (!currentlyPlaying.is_playing) {\n      return;\n    }\n\n    if (currentlyPlaying.item.duration_ms - currentlyPlaying.progress_ms < END_OF_SONG_BUFFER_MS) {\n        this.spotifyApi.pause();\n    }\n  }\n\n  updateYoutubePlayer = async (currentlyPlaying) => {\n    if (this.isCurrentlyPlayingNew(currentlyPlaying)){\n      const youtubeVideoId = await this.getVideoIdFromCurrentlyPlaying(currentlyPlaying);\n      this.props.updateYoutubePlayer(youtubeVideoId)\n      await this.waitForPlayerToPlay();\n    }\n  }\n\n  waitForPlayerToPlay = async () => {\n    if(this.youtubePlayerState !== 1){\n      await timeout(50);\n      await this.waitForPlayerToPlay();\n    }\n  }\n\n  getVideoIdFromCurrentlyPlaying = async (currentlyPlaying) => {\n    const songName = currentlyPlaying.item.name;\n    const artistName = currentlyPlaying.item.artists[0].name;\n\n    console.log(songName, artistName);\n\n    const result = await request('http://localhost:3000/getVideoId', 'POST', undefined, {\n      songName,\n      artistName\n    });\n\n    console.log(result)\n\n    return result.videoId;\n}\n\n  isCurrentlyPlayingNew = (currentlyPlaying) => {\n    if (currentlyPlaying === {}) {\n        return false;\n    }\n\n    const { lastSongId } = this.state;\n    const { item: { id: currentlyPlayingId }} = currentlyPlaying;\n\n    if (lastSongId != currentlyPlayingId) {\n        this.setState({lastSongId: currentlyPlayingId})\n        return true;\n    }\n\n    return false;\n}\n\n  getCurrentlyPlaying = async () => {\n    const { spotifyPlayer } = this.state;  \n    const currentlyPlaying = (await this.spotifyApi.getCurrentlyPlaying()) || {};\n    \n    spotifyPlayer.currentlyPlaying = currentlyPlaying;\n    this.setState({\n      spotifyPlayer\n    })\n  }\n\n  render = () => {\n    return (\n      <div>\n        <div>{JSON.stringify(this.state.spotifyPlayer.currentlyPlaying)}</div>\n      </div>\n    );\n  };\n}\n\nexport default SpotifyPlayer;\n","import React from \"react\";\n\nclass SpotifyPlaylists extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  render = () => {\n    const { className } = this.props;\n    console.log(className)\n    \n    return (\n      <div className={className}>\n        some playlist\n      </div>\n    );\n  };\n}\n\nexport default SpotifyPlaylists;\n","import styled from 'styled-components'\nimport Playlist from '../Playlist'\n\nexport const Container = styled.div`\n    display: flex;\n`\n\nexport const StyledPlaylist = styled(Playlist)`\n    && {\n        flex-grow: 1;\n        color: red;\n    }\n`","import React from \"react\";\nimport { Container, StyledPlaylist as Playlist } from './styled'\n\nclass SpotifyPlaylists extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  render = () => {\n    return (\n      <Container>\n        <Playlist className='hello'/>\n        <Playlist className='hello'/>\n        <Playlist className='hello'/>\n      </Container>\n    );\n  };\n}\n\nexport default SpotifyPlaylists;\n","import styled from 'styled-components'\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n`","import React from \"react\";\nimport YoutubePlayer from './YoutubePlayer'\nimport SpotifyPlayer from './SpotifyPlayer'\nimport { timeout } from './helpers'\nimport SpotifyPlaylists from './SpotifyPlaylists'\nimport { Container } from './styled'\n\nclass YoutubeMySpotify extends React.Component {\n  constructor(props) {\n    super();\n    this.YoutubePlayer = React.createRef();\n    this.SpotifyPlayer = React.createRef();\n  }\n\n  updateYoutubePlayer = async (id) => {\n    try{\n      this.YoutubePlayer.current.loadVideoById(id);\n    }\n    catch(e){\n      await timeout(10);\n      this.updateYoutubePlayer(id);\n    }\n  }\n\n  onYoutubePlayerStateChange = (event) => {\n    this.SpotifyPlayer.current.updateYoutubePlayerState(event);\n  }\n\n  render = () => {\n    return (\n      <Container>\n        <YoutubePlayer ref={this.YoutubePlayer} onPlayerStateChange={this.onYoutubePlayerStateChange} id=\"iAtomM7ybOM\" />\n        {/* <YoutubePlayer ref={this.player} id=\"iAtomM7ybOM\" /> */}\n        <SpotifyPlayer {...this.props} ref={this.SpotifyPlayer} updateYoutubePlayer={this.updateYoutubePlayer}></SpotifyPlayer>\n        {/* <SpotifyPlayer {...this.props}></SpotifyPlayer> */}\n        <SpotifyPlaylists />\n      </Container>\n    );\n  };\n}\n\nexport default YoutubeMySpotify;\n","import styled from 'styled-components'\nimport Image from \"react-bootstrap/Image\";\n\nexport const AccountSummaryContainer = styled.div`\n    text-align: center\n`\n\nexport const StyledImage = styled(Image)`\n    height: 200px;\n    width: 200px;\n`\n\nexport const Name = styled.h2`\n    margin: 10px;\n`\n\nexport const Info = styled.p`\n    display: inline;\n    margin: 5px;\n    color: grey;\n`\n\nexport const InfoContainer = styled.p`\n    color: grey;\n`\n","import React from \"react\";\nimport { AccountSummaryContainer, StyledImage as Image, Name, Info, InfoContainer } from \"./styled\"\n\nclass AccountSummary extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  render = () => {\n    const { profile } = this.props\n\n    return (\n      <AccountSummaryContainer>\n        <Image src={profile.images.length ? profile.images[0].url : 'https://pmcdeadline2.files.wordpress.com/2019/10/shutterstock_editorial_10434333bm.jpg?crop=0px%2C0px%2C2903px%2C1627px&resize=681%2C383'} roundedCircle />\n        <Name>{profile.display_name}</Name>\n        <InfoContainer>\n          <Info>{profile.followers.total} followers</Info> | <Info>{profile.product === 'premium' ? 'Premium' : 'Free Account'}</Info>\n        </InfoContainer>\n      </AccountSummaryContainer>\n    );\n  };\n}\n\nexport default AccountSummary;\n","import styled from 'styled-components'\nimport Image from \"react-bootstrap/Image\";\n\nexport const StoredUserContainer = styled.div`\n    border: 2px solid #888; \n    max-width: 350px;\n    overflow: auto;\n    text-align: left;\n    margin: auto;\n    border-radius: 5px;\n\n    &:hover {\n        box-shadow: 2px 2px #555;\n    }\n`\n\nexport const ProfilePicture = styled(Image)`\n    display: inline-block;\n    height: 60px;\n    width: 60px;\n    margin: 10px 15px;\n    float: left;\n`\n\nexport const Name = styled.p`\n    display: inline-block;\n    margin: 23px 0px;\n\n`\n\nexport const DeleteAccount = styled.div`\n    display: inline-block;\n    width: 20px;\n    height: 20px;\n    float: right;\n\n    &:hover {\n        color: red; // <Thing> when hovered\n    }\n`\n","export const setCurrentUser = (currentUser) => {\n    window.localStorage.setItem('currentUser', JSON.stringify(currentUser));\n}\n\nexport const deleteUser = (userToDelete) => {\n    const users = getUsers();\n    const newUsers = users.filter(user => user.profile.id !== userToDelete.profile.id)\n    setUsers(newUsers);\n}\n\nexport const getUsers = () => {\n    return JSON.parse(window.localStorage.getItem('users')) || [];\n}\n\nexport const setUsers = (users) => {\n    window.localStorage.setItem('users', JSON.stringify(users));\n}\n\n","import React from \"react\";\nimport { StoredUserContainer, ProfilePicture, Name, DeleteAccount } from './styled'\nimport { setCurrentUser, deleteUser } from '../helpers'\nimport { withRouter } from 'react-router-dom'\n\n\nclass StoredUser extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  preventBubble = (e = window.event) => {\n    e.cancelBubble = true;\n    if (e.stopPropagation) e.stopPropagation();\n  }\n\n  deleteAccountHandler = (e) => {\n    this.preventBubble(e)\n    deleteUser(this.props.user)\n    this.props.updateUsers();\n  }\n\n  useAccountHandler = (e) => {\n    setCurrentUser(this.props.user)\n    this.props.history.push(\"/YoutubeMySpotify\");\n  }\n\n  render = () => {\n    const { profile } = this.props.user;\n\n    return (\n      <StoredUserContainer onClick={this.useAccountHandler}>\n        <ProfilePicture src={profile.images.length ? profile.images[0].url : 'https://pmcdeadline2.files.wordpress.com/2019/10/shutterstock_editorial_10434333bm.jpg?crop=0px%2C0px%2C2903px%2C1627px&resize=681%2C383'} roundedCircle />\n        <Name>{profile.display_name}</Name>\n        <DeleteAccount onClick={this.deleteAccountHandler}>x</DeleteAccount>\n      </StoredUserContainer>\n    );\n  };\n}\n\nexport default withRouter(StoredUser);\n","import styled from 'styled-components'\nimport Button from 'react-bootstrap/Button'\n\nexport const AccountManagerContainer = styled.div`\n    margin: 80px;\n    text-align: center\n`\n\nexport const StyledButton = styled(Button)`\n    margin: 15px 5px;\n`","import React from \"react\";\nimport { LOGIN_URL } from '../../constants';\nimport queryString from 'query-string';\nimport { withRouter } from 'react-router-dom'\nimport SpotifyApi from '../../api/spotifyApi'\nimport AccountSummary from \"./AccountSummary\"\nimport StoredUser from \"./StoredUser\"\nimport { StyledButton as Button } from \"./styled\"\nimport { setCurrentUser, getUsers, setUsers } from './helpers'\n\nclass AccountManager extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      currentUser: this.getCurrentUserFromLocation(props.location),\n      users: this.getStoredUsers()\n    }\n\n    this.spotifyApi = new SpotifyApi(this.state.currentUser.accessToken, this.state.currentUser.refresh_token)\n  }\n\n  updateUsers = () => {\n    this.setState({users: getUsers()})\n  }\n\n  getStoredUsers(){\n    const users = getUsers();\n    return users;\n  }\n\n  getCurrentUserFromLocation(location){\n    const params = queryString.parse(location.search);\n    const {access_token, refresh_token} = params\n    return {\n      accessToken: access_token,\n      refreshToken: refresh_token\n    }\n  }\n\n  async getUserProfile(){\n    if(!this.spotifyApi.accessToken){\n      return\n    }\n\n    const userProfile = await this.spotifyApi.getProfile();\n    \n    const { currentUser } = this.state;\n    currentUser.profile = userProfile\n    \n    this.setState({ currentUser });\n  }\n\n  async componentDidMount() {\n    this.getUserProfile()\n  }\n\n\n  storeCurrentUser = (stayLoggedIn) => {\n    const { currentUser, users } = this.state;\n\n    if(stayLoggedIn){\n      const newUserId = currentUser.profile.id\n\n      if (!users.some(user => user.profile.id === newUserId)){\n        users.push(currentUser);\n        this.setState({users})\n      }\n    }\n\n    setCurrentUser(currentUser);\n    setUsers(users)\n\n    this.props.loginCallback()\n    this.props.history.push(\"/YoutubeMySpotify\");\n  }\n\n  render = () => {\n    const { currentUser, users } = this.state;\n    \n    if (currentUser.refreshToken && currentUser.profile){\n      return (\n        <div>\n          <p>Would you like to stay logged in?</p>\n          <br />\n          <AccountSummary {...currentUser} />\n          <Button variant=\"secondary\" onClick={() => this.storeCurrentUser(false)}>No Thanks</Button>\n          <Button onClick={() => this.storeCurrentUser(true)}>Yes Please!</Button>\n        </div>\n      )\n    }\n    else{\n      return (\n        <div>\n\n          <p>{users.length ? 'Your saved accounts...' : 'No Accounts'}</p>\n          {users.map((user, index) => <StoredUser user={user} updateUsers={this.updateUsers} key={index}/>)}\n          <br />\n          <Button onClick={() => window.location.href = LOGIN_URL}>Add a new Account</Button>\n        \n        </div>\n      )\n    }\n  };\n}\n\nexport default withRouter(AccountManager);\n","export const LOGIN_URL = 'http://ec2-52-56-132-53.eu-west-2.compute.amazonaws.com:3000/login';","import styled from 'styled-components'\n\nexport const HeaderContainer = styled.div`\n    padding: 9px;\n    background-color: black;\n`\n\nexport const HeaderText = styled.p`\n    margin: 0;\n    display: inline;    \n`\n","import styled from 'styled-components'\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nexport const StyledDropdown = styled(Dropdown)`\n    display: inline;    \n    float: right;\n    margin: -8px;\n`","import React from \"react\";\nimport { StyledDropdown as Dropdown } from \"./styled\";\n\n\n/*\nprops: {\n    variant: 'success',\n    text: 'Dropdown Button',\n    items: [\n        href: './', --want to do on click here or something\n        text: 'hello world',\n    ]\n}\n*/\nfunction DropdownButton (props){\n    return (\n      <Dropdown alignRight>\n        <Dropdown.Toggle variant={props.variant} id=\"dropdown-basic\">\n          {props.text}\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          {props.items.map((item, index) => {\n            return Object.keys(item).length\n              ? <Dropdown.Item href={item.href} key={index}>{item.text}</Dropdown.Item>\n              : <Dropdown.Divider key={index} />\n          })}\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n\n}\n\nexport default DropdownButton;\n","import React from \"react\";\nimport { HeaderContainer, HeaderText } from \"./styled\";\nimport DropdownButton from \"./DropdownButton\"\n\nclass Header extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  generateDropDownProps(){\n    return {\n      variant: 'secondary',\n      text: 'Account',\n      items: this.generateItemsArrayFromUsers()\n    }\n  }\n\n  generateItemsArrayFromUsers(){\n    const items = this.props.users.map(user => {\n      return {\n        href: '/',\n        text: user.profile.display_name\n      } \n    })\n\n    items.push({}) //divider\n    items.push({\n        onclick: () => {this.props.history.push(\"/AccountManager\");},\n        text: 'Account Manager'\n      }\n    )\n\n    return items;\n  }\n\n  render = () => {\n    return (\n      <HeaderContainer>\n        <HeaderText onClick={() => window.location = '/'}>Youtube My Spotify</HeaderText>\n        <DropdownButton {...this.generateDropDownProps()}></DropdownButton>\n      </HeaderContainer>\n    );\n  };\n}\n\nexport default Header;\n","import React from \"react\";\nimport YoutubeMySpotify from \"./components/YoutubeMySpotify\";\nimport AccountManager from \"./components/AccountManager\";\nimport Header from \"./components/Header/index.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { BrowserRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { AccountManagerContainer } from \"./components/AccountManager/styled\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.player = React.createRef();\n    this.state = {\n      currentUser: this.loadCurrentUser(),\n      users: this.loadUsers()\n    };\n  }\n\n  loginCallback = () => {\n    this.setState({ currentUser: this.loadCurrentUser() });\n    this.setState({ users: this.loadUsers() });\n    this.forceUpdate();\n  };\n\n  loadCurrentUser() {\n    return JSON.parse(window.localStorage.getItem(\"currentUser\"));\n  }\n  \n  loadUsers() {\n    return JSON.parse(window.localStorage.getItem(\"users\")) || [];\n  }\n\n  loadVideoById = id => {\n    this.player.current.loadVideoById(id);\n  };\n\n  render() {\n    return (\n      <div>\n        <Header {...this.state}></Header>\n        yoyoyo\n        <Router>\n          <Switch>\n            <Route path=\"/\">\n              <AccountManagerContainer>\n                <AccountManager loginCallback={() => this.loginCallback()}/>\n              </AccountManagerContainer>\n            </Route>\n            \n            {/* <Route path=\"/YoutubeMySpotify\">\n              <YoutubeMySpotify {...this.state.currentUser}/>\n            </Route> */}\n            {/* <Route path=\"/AccountManager\">\n              <AccountManagerContainer>\n                <AccountManager />\n              </AccountManagerContainer>\n            </Route> */}\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}