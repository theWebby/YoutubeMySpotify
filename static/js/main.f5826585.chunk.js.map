{"version":3,"sources":["components/YoutubeMySpotify/YoutubePlayer/index.js","components/YoutubeMySpotify/styled/index.js","api/request.js","api/spotifyApi.js","components/YoutubeMySpotify/helpers.js","components/YoutubeMySpotify/SpotifyPlayer/SpotifyControlPanel/styled/index.js","components/YoutubeMySpotify/SpotifyPlayer/SpotifyControlPanel/index.js","components/YoutubeMySpotify/SpotifyPlayer/index.js","components/YoutubeMySpotify/SpotifyPlaylists/Playlist/index.js","components/YoutubeMySpotify/SpotifyPlaylists/styled/index.js","components/YoutubeMySpotify/SpotifyPlaylists/index.js","components/YoutubeMySpotify/index.js","components/AccountManager/AccountSummary/styled/index.js","components/AccountManager/AccountSummary/index.js","components/AccountManager/StoredUser/styled/index.js","components/AccountManager/helpers.js","components/AccountManager/StoredUser/index.js","components/AccountManager/styled/index.js","components/AccountManager/index.js","constants.js","components/Header/styled/index.js","components/Header/DropdownButton/styled/index.js","components/Header/DropdownButton/index.js","components/Header/index.js","App.js","index.js"],"names":["YoutubePlayer","props","componentDidMount","window","YT","loadVideo","tag","document","createElement","src","onYouTubeIframeAPIReady","firstScriptTag","getElementsByTagName","parentNode","insertBefore","id","player","Player","videoId","events","onReady","onPlayerReady","onStateChange","onPlayerStateChange","event","target","render","className","this","loadVideoById","console","log","React","Component","Container","styled","div","StyledYoutubePlayer","request","theUrl","method","accessToken","params","Promise","resolve","reject","xmlHttp","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","open","setRequestHeader","send","stringify","SpotifyApi","refreshToken","url","getNewAccessToken","access_token","_makeRequest","ms","timeout","setTimeout","RoundedButton","Button","ControlPanelContainer","Info","p","MarqueeContainer","SpotifyControlPanel","renderInfoPanel","renderControlPanel","spotifyApi","play","catch","e","skip","prev","currentlyPlaying","variant","onClick","onPrev","onPlay","is_playing","onSkip","Object","keys","length","item","name","album","velocity","artists","map","artist","index","array","SpotifyPlayer","update","a","getCurrentlyPlaying","state","spotifyPlayer","updateYoutubePlayer","pauseSpotifyIfNearEnd","skipWhenVideoEnds","youtubePlayerState","updateYoutubePlayerState","data","progress_ms","duration_ms","seek","isCurrentlyPlayingNew","getVideoIdFromCurrentlyPlaying","youtubeVideoId","waitForPlayerToPlay","songName","artistName","lastSongId","currentlyPlayingId","setState","lastSong","SpotifyPlaylists","StyledPlaylist","Playlist","YoutubeMySpotify","current","onYoutubePlayerStateChange","ref","style","width","createRef","AccountSummaryContainer","StyledImage","Image","Name","h2","InfoContainer","AccountSummary","profile","display","images","roundedCircle","display_name","followers","total","product","StoredUserContainer","ProfilePicture","DeleteAccount","setCurrentUser","currentUser","localStorage","setItem","getUsers","getItem","setUsers","users","StoredUser","preventBubble","cancelBubble","stopPropagation","deleteAccountHandler","userToDelete","newUsers","filter","user","deleteUser","updateUsers","useAccountHandler","history","push","withRouter","AccountManagerContainer","StyledButton","FacebookNotice","AccountManager","storeCurrentUser","stayLoggedIn","newUserId","some","onAddNewAccount","clientUrl","location","href","includes","key","getCurrentUserFromLocation","getStoredUsers","refresh_token","queryString","search","getProfile","userProfile","getUserProfile","HeaderContainer","HeaderText","StyledDropdown","Dropdown","DropdownButton","alignRight","Toggle","text","Menu","items","Item","onclick","Divider","Header","generateDropDownProps","generateItemsArrayFromUsers","App","loadCurrentUser","loadUsers","forceUpdate","http-equiv","content","path","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.f5826585.chunk.js","sourcesContent":["import React from 'react';\n\nclass YoutubePlayer extends React.Component {\n  constructor(props){\n    super()\n  }\n\n  componentDidMount = () => {\n    // On mount, check to see if the API script is already loaded\n\n    if (!window.YT) { // If not, load the script asynchronously\n      const tag = document.createElement('script');\n      tag.src = 'https://www.youtube.com/iframe_api';\n\n      // onYouTubeIframeAPIReady will load the video after the script is loaded\n      window.onYouTubeIframeAPIReady = this.loadVideo;\n\n      const firstScriptTag = document.getElementsByTagName('script')[0];\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\n\n    } else { // If script is already there, load the video directly\n      this.loadVideo();\n    }\n  };\n\n  loadVideo = () => {\n    const { id } = this.props;\n\n    // the Player object is created uniquely based on the id in props\n    this.player = new window.YT.Player(`youtube-player-${id}`, {\n      videoId: id,\n      events: {\n        onReady: this.onPlayerReady,\n        onStateChange: this.onPlayerStateChange\n      },\n    });\n  };\n\n  onPlayerStateChange = (event) => {\n    this.props.onPlayerStateChange(event);\n  }\n\n\n  onPlayerReady = event => {\n    this.player = event.target;\n  };\n\n  loadVideoById(id){\n    this.player.loadVideoById(id, 0);\n  }\n\n  isPlayerReady(){\n    console.log(this.player.loadVideoById)\n    return (!!this.player.loadVideoById);\n  }\n\n  render = () => {\n    const { id } = this.props;\n    return (\n      <div className={this.props.className}>\n        <div id={`youtube-player-${id}`} />\n      </div>\n    );\n  };\n}\n\nexport default YoutubePlayer;\n","import styled from 'styled-components'\nimport YoutubePlayer from '../YoutubePlayer'\n\nexport const Container = styled.div`\n    display: flex;\n    flex-direction: column;\n`\n\nexport const StyledYoutubePlayer = styled(YoutubePlayer)`\n    margin: auto;\n`","export default function request(theUrl, method, accessToken, params = null){\n    return new Promise((resolve, reject) => {\n        var xmlHttp = new XMLHttpRequest();\n        xmlHttp.onreadystatechange = function() {     \n            if (xmlHttp.readyState === 4 && (xmlHttp.status === 200)){\n                resolve(JSON.parse(xmlHttp.responseText));\n            }\n            if (xmlHttp.readyState === 4 && (xmlHttp.status === 204)){\n                resolve();\n            }\n            if (xmlHttp.readyState === 4){\n                reject(xmlHttp)\n            }\n        }\n\n        xmlHttp.open(method, theUrl, true); // true for asynchronous \n        if (accessToken){\n            xmlHttp.setRequestHeader('Authorization', 'Bearer ' + accessToken)\n        }\n        if (params){\n            xmlHttp.setRequestHeader('Content-Type', 'application/json');\n        }\n        xmlHttp.send(JSON.stringify(params));\n    })\n\n    //webby sux\n}\n","import request from \"./request\"\n\n\nexport default class SpotifyApi {\n    constructor(accessToken, refreshToken){\n        this.accessToken = accessToken;\n        this.refreshToken = refreshToken;\n    }\n\n    async _makeRequest(url, method, accessToken){\n        try{\n            return await request(url, method, accessToken);\n        }\n        catch (e) {\n            if (e.status === 401){\n                this.accessToken = (await this.getNewAccessToken(this.refreshToken)).access_token;\n                return request(url, method, this.accessToken);\n            }\n\n            throw e\n        }\n    }\n\n    getCurrentlyPlaying(){\n        return this._makeRequest('https://api.spotify.com/v1/me/player/currently-playing', 'GET', this.accessToken);\n    }\n\n    pause(){\n        return this._makeRequest('https://api.spotify.com/v1/me/player/pause', 'PUT', this.accessToken)\n    }\n\n    skip(){\n        return this._makeRequest('https://api.spotify.com/v1/me/player/next', 'POST', this.accessToken);\n    }\n\n    \n    prev(){\n        return this._makeRequest('https://api.spotify.com/v1/me/player/previous', 'POST', this.accessToken);\n    }\n\n    seek(ms){\n        return this._makeRequest(`https://api.spotify.com/v1/me/player/seek?position_ms=${ms}`, 'PUT', this.accessToken);\n    }\n\n    play(){\n        return this._makeRequest('https://api.spotify.com/v1/me/player/play', 'PUT', this.accessToken);\n    }\n\n    getProfile(){\n        return this._makeRequest('https://api.spotify.com/v1/me', 'GET', this.accessToken)\n    }\n\n    getNewAccessToken(refreshToken){\n        return request(`https://youtubemyspotify.uk/refresh_token?refresh_token=${this.refreshToken}`, 'GET');\n    }\n}","export const timeout = (ms) => {\n  return new Promise((resolve) => {\n    setTimeout(() => {resolve()}, ms)\n  })\n}","import styled from 'styled-components'\nimport Button from 'react-bootstrap/Button'\n\nexport const RoundedButton = styled(Button)`\n    border-radius: 100px;\n    line-height: 0;\n    padding: 10px;\n    margin: 10px;\n`\n\nexport const ControlPanelContainer = styled.div`\n    display: block;\n    text-align: center;\n    margin: 10px;\n`\n\nexport const Info = styled.p`\n    display: inline;\n    margin: 5px;\n    color: grey;\n`\n\nexport const MarqueeContainer = styled.div`\n    display: inline-block;\n    width: 200px;\n    overflow: hidden;\n`\n\n","import React from \"react\";\nimport { RoundedButton, ControlPanelContainer, Info, MarqueeContainer } from './styled'\nimport { IoMdPlay, IoMdPause, IoIosSkipForward, IoIosSkipBackward } from 'react-icons/io';\nimport Marquee from \"react-smooth-marquee\"\n\nclass SpotifyControlPanel extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  onPlay(){\n    this.props.spotifyApi.play().catch(e => {console.log(e)});\n  }\n\n  onSkip(){\n    this.props.spotifyApi.skip().catch(e => {console.log(e)});\n  }\n\n  onPrev(){\n    this.props.spotifyApi.prev().catch(e => {console.log(e)});\n  }\n\n  renderControlPanel() {\n    const { currentlyPlaying } = this.props\n\n    //TODO: The play button should say if the video is playing not spotify\n    return (\n      <div>\n        <RoundedButton variant='secondary' onClick={() => this.onPrev()}><IoIosSkipBackward /></RoundedButton>\n    <RoundedButton variant='secondary' onClick={() => this.onPlay()}>{currentlyPlaying.is_playing ? <IoMdPause /> : <IoMdPlay />}</RoundedButton>\n        <RoundedButton variant='secondary' onClick={() => this.onSkip()}><IoIosSkipForward /></RoundedButton>\n      </div>\n    )\n  }\n\n  renderInfoPanel() {\n    const { currentlyPlaying } = this.props\n\n    if (!Object.keys(currentlyPlaying).length) {\n      return <div>Nothing is currently playing</div>\n    }\n\n    return( \n      <div>\n        <div><Info>{currentlyPlaying.item.name}</Info> | <Info>{currentlyPlaying.item.album.name}</Info></div>\n        <MarqueeContainer>\n          <Marquee velocity={0.025}>{currentlyPlaying.item.artists.map((artist, index, array) => artist.name + (index === array.length-1 ? '' : ', '))}</Marquee>\n        </MarqueeContainer>\n      </div>\n    )\n  }\n\n  render = () => {\n    return (\n      <ControlPanelContainer>\n        <div className={this.props.className}>\n          {this.renderInfoPanel()}\n          {this.renderControlPanel()}\n        </div>\n      </ControlPanelContainer>\n    );\n  };\n}\n\nexport default SpotifyControlPanel;\n","import React from \"react\";\nimport SpotifyApi from '../../../api/spotifyApi'\nimport request from '../../../api/request'\nimport { timeout } from '../helpers'\nimport SpotifyControlPanel from './SpotifyControlPanel'\n\nconst UPDATE_CURRENTLY_PLAYING_INTERVAL_MS = 1500;\nconst END_OF_SONG_BUFFER_MS = 15000\n\n\nclass SpotifyPlayer extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      spotifyPlayer: {\n        currentlyPlaying: {\n          \n        }\n      },\n      lastSong: ''\n    }\n\n    this.youtubePlayerState = -1;\n\n    const { accessToken, refreshToken } = props\n    this.spotifyApi = new SpotifyApi(accessToken, refreshToken)\n  }\n  \n  async componentDidMount() {\n    this.update();\n  }\n\n  update = async () => {\n    while(true){\n      try{\n        await this.getCurrentlyPlaying();\n        \n        const { spotifyPlayer: { currentlyPlaying }} = this.state;\n  \n        if(Object.keys(currentlyPlaying).length !== 0){\n          await this.updateYoutubePlayer(currentlyPlaying)\n          await this.pauseSpotifyIfNearEnd(currentlyPlaying)\n        }\n    \n        await this.skipWhenVideoEnds();\n    \n      }\n      catch (e) { console.log('e', e) }\n  \n      await timeout(UPDATE_CURRENTLY_PLAYING_INTERVAL_MS);\n    }\n  }\n\n  skipWhenVideoEnds = async () => {\n    if(this.youtubePlayerState === 0){\n      await this.spotifyApi.skip();\n    }\n  }\n\n  updateYoutubePlayerState = (event) => {\n    this.youtubePlayerState = event.data;\n  }\n\n  pauseSpotifyIfNearEnd = async (currentlyPlaying) => {\n    const { is_playing, progress_ms, item } = currentlyPlaying\n\n    if (!is_playing) {\n      return;\n    }\n\n    if (item.duration_ms - progress_ms < END_OF_SONG_BUFFER_MS) {\n        this.spotifyApi.seek(progress_ms - 15000);\n    }\n  }\n\n  updateYoutubePlayer = async (currentlyPlaying) => {\n    if (this.isCurrentlyPlayingNew(currentlyPlaying)){\n      const youtubeVideoId = await this.getVideoIdFromCurrentlyPlaying(currentlyPlaying);\n      this.props.updateYoutubePlayer(youtubeVideoId)\n      await this.waitForPlayerToPlay();\n    }\n  }\n\n  waitForPlayerToPlay = async () => {\n    if(this.youtubePlayerState !== 1){\n      await timeout(50);\n      await this.waitForPlayerToPlay();\n    }\n  }\n\n  getVideoIdFromCurrentlyPlaying = async (currentlyPlaying) => {\n    const songName = currentlyPlaying.item.name;\n    const artistName = currentlyPlaying.item.artists[0].name;\n\n    return await request('https://youtubemyspotify.uk/getVideoId', 'POST', '', {songName, artistName})\n  }\n\n  isCurrentlyPlayingNew = (currentlyPlaying) => {\n    const { lastSongId } = this.state;\n    const { item: { id: currentlyPlayingId }} = currentlyPlaying;\n\n    if (lastSongId != currentlyPlayingId) {\n        this.setState({lastSongId: currentlyPlayingId})\n        return true;\n    }\n\n    return false;\n}\n\n  getCurrentlyPlaying = async () => {\n    const { spotifyPlayer } = this.state;  \n    const currentlyPlaying = (await this.spotifyApi.getCurrentlyPlaying()) || {};\n    \n    spotifyPlayer.currentlyPlaying = currentlyPlaying;\n    this.setState({\n      spotifyPlayer\n    })\n  }\n\n  render = () => {\n    return (\n      <div>\n        <SpotifyControlPanel {...this.state.spotifyPlayer} spotifyApi={this.spotifyApi}></SpotifyControlPanel>\n      </div>\n    );\n  };\n}\n\nexport default SpotifyPlayer;\n","import React from \"react\";\n\nclass SpotifyPlaylists extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  render = () => {\n    const { className } = this.props;\n    console.log(className)\n    \n    return (\n      <div className={className}>\n      </div>\n    );\n  };\n}\n\nexport default SpotifyPlaylists;\n","import styled from 'styled-components'\nimport Playlist from '../Playlist'\n\nexport const Container = styled.div`\n    display: flex;\n`\n\nexport const StyledPlaylist = styled(Playlist)`\n    && {\n        flex-grow: 1;\n        color: red;\n    }\n`","import React from \"react\";\nimport { Container, StyledPlaylist as Playlist } from './styled'\n\nclass SpotifyPlaylists extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  render = () => {\n    return (\n      <Container>\n        <Playlist className='hello'/>\n        <Playlist className='hello'/>\n        <Playlist className='hello'/>\n      </Container>\n    );\n  };\n}\n\nexport default SpotifyPlaylists;\n","import React from \"react\";\nimport { StyledYoutubePlayer as YoutubePlayer } from './styled'\nimport SpotifyPlayer from './SpotifyPlayer'\nimport { timeout } from './helpers'\nimport SpotifyPlaylists from './SpotifyPlaylists'\nimport { Container } from './styled'\n\nclass YoutubeMySpotify extends React.Component {\n  constructor(props) {\n    super();\n    this.YoutubePlayer = React.createRef();\n    this.SpotifyPlayer = React.createRef();\n  }\n\n  updateYoutubePlayer = async (id) => {\n    try{\n      this.YoutubePlayer.current.loadVideoById(id);\n    }\n    catch(e){\n      await timeout(10);\n      this.updateYoutubePlayer(id);\n    }\n  }\n\n  onYoutubePlayerStateChange = (event) => {\n    this.SpotifyPlayer.current.updateYoutubePlayerState(event);\n  }\n\n  render = () => {\n    return (\n      <Container>\n        <YoutubePlayer className='someclassname' ref={this.YoutubePlayer} onPlayerStateChange={this.onYoutubePlayerStateChange} id=\"iAtomM7ybOM\" />\n        {/* <YoutubePlayer ref={this.player} id=\"iAtomM7ybOM\" /> */}\n        <SpotifyPlayer {...this.props} ref={this.SpotifyPlayer} updateYoutubePlayer={this.updateYoutubePlayer}></SpotifyPlayer>\n        {/* <SpotifyPlayer {...this.props}></SpotifyPlayer> */}\n        <hr style={{width: '95%'}}/>\n        <SpotifyPlaylists />\n      </Container>\n    );\n  };\n}\n\nexport default YoutubeMySpotify;\n","import styled from 'styled-components'\nimport Image from \"react-bootstrap/Image\";\n\nexport const AccountSummaryContainer = styled.div`\n    text-align: center\n`\n\nexport const StyledImage = styled(Image)`\n    height: 200px;\n    width: 200px;\n`\n\nexport const Name = styled.h2`\n    margin: 10px;\n`\n\nexport const Info = styled.p`\n    display: inline;\n    margin: 5px;\n    color: grey;\n`\n\nexport const InfoContainer = styled.p`\n    color: grey;\n`\n","import React from \"react\";\nimport { AccountSummaryContainer, StyledImage as Image, Name, Info, InfoContainer } from \"./styled\"\nimport request from \"../../../api/request\";\n\nclass AccountSummary extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  render = () => {\n    const { profile } = this.props\n\n    return (\n      <AccountSummaryContainer>\n         <iframe style={{display: 'none'}} src=\"https://spotify.com/logout\"></iframe> \n\n        <Image src={profile.images.length ? profile.images[0].url : 'https://pmcdeadline2.files.wordpress.com/2019/10/shutterstock_editorial_10434333bm.jpg?crop=0px%2C0px%2C2903px%2C1627px&resize=681%2C383'} roundedCircle />\n        <Name>{profile.display_name}</Name>\n        <InfoContainer>\n          <Info>{profile.followers.total} followers</Info> | <Info>{profile.product === 'premium' ? 'Premium' : 'Free Account'}</Info>\n        </InfoContainer>\n      </AccountSummaryContainer>\n    );\n  };\n}\n\nexport default AccountSummary;\n","import styled from 'styled-components'\nimport Image from \"react-bootstrap/Image\";\n\nexport const StoredUserContainer = styled.div`\n    border: 2px solid #888; \n    max-width: 350px;\n    overflow: auto;\n    text-align: left;\n    margin: auto;\n    border-radius: 5px;\n\n    &:hover {\n        box-shadow: 2px 2px #555;\n    }\n`\n\nexport const ProfilePicture = styled(Image)`\n    display: inline-block;\n    height: 60px;\n    width: 60px;\n    margin: 10px 15px;\n    float: left;\n`\n\nexport const Name = styled.p`\n    display: inline-block;\n    margin: 23px 0px;\n\n`\n\nexport const DeleteAccount = styled.div`\n    display: inline-block;\n    width: 20px;\n    height: 20px;\n    float: right;\n\n    &:hover {\n        color: red; // <Thing> when hovered\n    }\n`\n","export const setCurrentUser = (currentUser) => {\n    window.localStorage.setItem('currentUser', JSON.stringify(currentUser));\n}\n\nexport const deleteUser = (userToDelete) => {\n    const users = getUsers();\n    const newUsers = users.filter(user => user.profile.id !== userToDelete.profile.id)\n    setUsers(newUsers);\n}\n\nexport const getUsers = () => {\n    return JSON.parse(window.localStorage.getItem('users')) || [];\n}\n\nexport const setUsers = (users) => {\n    window.localStorage.setItem('users', JSON.stringify(users));\n}\n\n","import React from \"react\";\nimport { StoredUserContainer, ProfilePicture, Name, DeleteAccount } from './styled'\nimport { setCurrentUser, deleteUser } from '../helpers'\nimport { withRouter } from 'react-router-dom'\n\n\nclass StoredUser extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  preventBubble = (e = window.event) => {\n    e.cancelBubble = true;\n    if (e.stopPropagation) e.stopPropagation();\n  }\n\n  deleteAccountHandler = (e) => {\n    this.preventBubble(e)\n    deleteUser(this.props.user)\n    this.props.updateUsers();\n  }\n\n  useAccountHandler = (e) => {\n    setCurrentUser(this.props.user)\n    this.props.history.push(\"/YoutubeMySpotify\");\n  }\n\n  render = () => {\n    const { profile } = this.props.user;\n\n    return (\n      <StoredUserContainer onClick={this.useAccountHandler}>\n        <ProfilePicture src={profile.images.length ? profile.images[0].url : 'https://pmcdeadline2.files.wordpress.com/2019/10/shutterstock_editorial_10434333bm.jpg?crop=0px%2C0px%2C2903px%2C1627px&resize=681%2C383'} roundedCircle />\n        <Name>{profile.display_name}</Name>\n        <DeleteAccount onClick={this.deleteAccountHandler}>x</DeleteAccount>\n      </StoredUserContainer>\n    );\n  };\n}\n\nexport default withRouter(StoredUser);\n","import styled from 'styled-components'\nimport Button from 'react-bootstrap/Button'\n\nexport const AccountManagerContainer = styled.div`\n    margin: 80px;\n    text-align: center\n`\n\nexport const StyledButton = styled(Button)`\n    margin: 15px 5px;\n`\n\nexport const FacebookNotice = styled.p`\n    position: absolute;\n    bottom: 10px;\n    color: #DDD;\n    margin: 5px;\n    left: 0;\n    right: 0;\n`\n","import React from \"react\";\nimport { SERVER_URL } from '../../constants';\nimport queryString from 'query-string';\nimport { withRouter } from 'react-router-dom'\nimport SpotifyApi from '../../api/spotifyApi'\nimport AccountSummary from \"./AccountSummary\"\nimport StoredUser from \"./StoredUser\"\nimport { StyledButton as Button, FacebookNotice } from \"./styled\"\nimport { setCurrentUser, getUsers, setUsers } from './helpers'\n\nclass AccountManager extends React.Component {\n  constructor(props) {\n    super();\n    this.state = {\n      currentUser: this.getCurrentUserFromLocation(props.location),\n      users: this.getStoredUsers()\n    }\n\n    this.spotifyApi = new SpotifyApi(this.state.currentUser.accessToken, this.state.currentUser.refresh_token)\n  }\n\n  updateUsers = () => {\n    this.setState({ users: getUsers() })\n    this.props.updateUsers();\n  }\n\n  getStoredUsers() {\n    const users = getUsers();\n    return users;\n  }\n\n  getCurrentUserFromLocation(location) {\n    const params = queryString.parse(location.search);\n    const { access_token, refresh_token } = params\n    return {\n      accessToken: access_token,\n      refreshToken: refresh_token\n    }\n  }\n\n  async getUserProfile() {\n    if (!this.spotifyApi.accessToken) {\n      return\n    }\n\n    const userProfile = await this.spotifyApi.getProfile();\n\n    const { currentUser } = this.state;\n    currentUser.profile = userProfile\n\n    this.setState({ currentUser });\n  }\n\n  async componentDidMount() {\n    this.getUserProfile()\n  }\n\n\n  storeCurrentUser = (stayLoggedIn) => {\n    const { currentUser, users } = this.state;\n\n    if (stayLoggedIn) {\n      const newUserId = currentUser.profile.id\n\n      if (!users.some(user => user.profile.id === newUserId)) {\n        users.push(currentUser);\n        this.setState({ users })\n      }\n    }\n\n    setCurrentUser(currentUser);\n    setUsers(users)\n\n    // this.spotifyLogout();\n\n    this.props.updateUsers()\n    this.props.history.push(\"/YoutubeMySpotify\");\n  }\n\n  onAddNewAccount = () => {\n    const clientUrl = window.location.href.includes('localhost')\n      ? 'http://localhost:3001/%23/AccountManager'\n      : 'https://thewebby.github.io/YoutubeMySpotify/%23/AccountManager'\n    window.location.href = `${SERVER_URL}login?clientUrl=${clientUrl}`; //http://localhost:3001/%23/AccountManager\n  }\n\n  render = () => {\n    const { currentUser, users } = this.state;\n\n    if (currentUser.refreshToken && currentUser.profile) {\n      return (\n        <div>\n          <p>Would you like to stay logged in?</p>\n          <br />\n          <AccountSummary {...currentUser} />\n          <Button variant=\"secondary\" onClick={() => this.storeCurrentUser(false)}>No Thanks</Button>\n          <Button onClick={() => this.storeCurrentUser(true)}>Yes Please!</Button>\n\n          <FacebookNotice>If you wish to sign in using a different facebook account, you must first <a target=\"_blank\" href=\"https://www.facebook.com\">log out</a> of your current facebook account.</FacebookNotice>\n        </div>\n      )\n    }\n    else {\n      return (\n        <div>\n\n          <p>{users.length ? 'Your saved accounts...' : 'No Accounts'}</p>\n          {users.map((user, index) => <StoredUser user={user} updateUsers={this.updateUsers} key={index} />)}\n          <br />\n          <Button onClick={() => this.onAddNewAccount()}>Add a new Account</Button>\n\n        </div>\n      )\n    }\n  };\n}\n\nexport default withRouter(AccountManager);\n","export const SERVER_URL = 'http://ec2-52-56-132-53.eu-west-2.compute.amazonaws.com:3000/';","import styled from 'styled-components'\n\nexport const HeaderContainer = styled.div`\n    padding: 9px;\n    background-color: black;\n`\n\nexport const HeaderText = styled.p`\n    margin: 0;\n    display: inline;    \n`\n","import styled from 'styled-components'\nimport Dropdown from \"react-bootstrap/Dropdown\";\n\nexport const StyledDropdown = styled(Dropdown)`\n    display: inline;    \n    float: right;\n    margin: -8px;\n`","import React from \"react\";\nimport { StyledDropdown as Dropdown } from \"./styled\";\n\n\n/*\nprops: {\n    variant: 'success',\n    text: 'Dropdown Button',\n    items: [\n        href: './', --want to do on click here or something\n        text: 'hello world',\n    ]\n}\n*/\nfunction DropdownButton (props){\n    return (\n      <Dropdown alignRight>\n        <Dropdown.Toggle variant={props.variant} id=\"dropdown-basic\">\n          {props.text}\n        </Dropdown.Toggle>\n\n        <Dropdown.Menu>\n          {props.items.map((item, index) => {\n            return Object.keys(item).length\n              ? <Dropdown.Item onClick={item.onclick} key={index}>{item.text}</Dropdown.Item>\n              : <Dropdown.Divider key={index} />\n          })}\n        </Dropdown.Menu>\n      </Dropdown>\n    );\n\n}\n\nexport default DropdownButton;\n","import React from \"react\";\nimport { HeaderContainer, HeaderText } from \"./styled\";\nimport DropdownButton from \"./DropdownButton\"\nimport { withRouter } from 'react-router-dom'\n\nclass Header extends React.Component {\n  constructor(props) {\n    super();\n  }\n\n  generateDropDownProps(){\n    return {\n      variant: 'secondary',\n      text: 'Account',\n      items: this.generateItemsArrayFromUsers()\n    }\n  }\n\n  generateItemsArrayFromUsers(){\n    const items = this.props.users.map(user => {\n      return {\n        href: '/',\n        text: user.profile.display_name\n      } \n    })\n\n    items.push({}) //divider\n    items.push({\n        onclick: () => {\n          this.props.history.push(\"/AccountManager\");\n        },\n        text: 'Account Manager'\n      }\n    )\n\n    return items;\n  }\n\n  render = () => {\n    return (\n      <HeaderContainer>\n        <HeaderText onClick={() => window.location = '/'}>Youtube My Spotify</HeaderText>\n        <DropdownButton {...this.generateDropDownProps()}></DropdownButton>\n      </HeaderContainer>\n    );\n  };\n}\n\nexport default withRouter(Header);\n","import React from \"react\";\nimport YoutubeMySpotify from \"./components/YoutubeMySpotify\";\nimport AccountManager from \"./components/AccountManager\";\nimport Header from \"./components/Header/index.js\";\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\nimport { AccountManagerContainer } from \"./components/AccountManager/styled\";\n\nclass App extends React.Component {\n  constructor() {\n    super();\n    this.player = React.createRef();\n    this.state = {\n      currentUser: this.loadCurrentUser(),\n      users: this.loadUsers()\n    };\n  }\n\n  updateUsers = () => {\n    this.setState({ currentUser: this.loadCurrentUser() });\n    this.setState({ users: this.loadUsers() });\n    this.forceUpdate();\n  };\n\n  loadCurrentUser() {\n    return JSON.parse(window.localStorage.getItem(\"currentUser\"));\n  }\n\n  loadUsers() {\n    return JSON.parse(window.localStorage.getItem(\"users\")) || [];\n  }\n\n  loadVideoById = id => {\n    this.player.current.loadVideoById(id);\n  };\n\n  render() {\n    return (\n      <div>\n        <meta http-equiv=\"Content-Security-Policy\" content=\"default-src * 'unsafe-inline' 'unsafe-eval'; script-src * 'unsafe-inline' 'unsafe-eval'; connect-src * 'unsafe-inline'; img-src * data: blob: 'unsafe-inline'; frame-src *; style-src * 'unsafe-inline';\" />\n        {/* https://www.youtube.com/watch?v=1wDzEjXbblM */}\n        <Router>\n          <Header {...this.state}></Header>\n          <Switch>\n            <Route path=\"/YoutubeMySpotify\">\n              <YoutubeMySpotify {...this.state.currentUser} />\n            </Route>\n            <Route path=\"/AccountManager\">\n              <AccountManagerContainer>\n                <AccountManager updateUsers={() => this.updateUsers()} />\n              </AccountManagerContainer>\n            </Route>\n          </Switch>\n        </Router>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n"],"sourceRoot":""}