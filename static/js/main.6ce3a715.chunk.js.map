{"version":3,"sources":["components/YoutubeMySpotify/YoutubePlayer/index.js","api/request.js","api/spotifyApi.js","components/YoutubeMySpotify/helpers.js","components/YoutubeMySpotify/SpotifyPlayer/index.js","components/YoutubeMySpotify/SpotifyPlaylists/Playlist/index.js","components/YoutubeMySpotify/SpotifyPlaylists/styled/index.js","components/YoutubeMySpotify/SpotifyPlaylists/index.js","components/YoutubeMySpotify/styled/index.js","components/YoutubeMySpotify/index.js","components/AccountManager/AccountSummary/styled/index.js","components/AccountManager/AccountSummary/index.js","components/AccountManager/StoredUser/styled/index.js","components/AccountManager/helpers.js","components/AccountManager/StoredUser/index.js","components/AccountManager/styled/index.js","components/AccountManager/index.js","constants.js","components/Header/styled/index.js","components/Header/DropdownButton/styled/index.js","components/Header/DropdownButton/index.js","components/Header/index.js","App.js","index.js"],"names":["YoutubePlayer","props","componentDidMount","window","YT","loadVideo","tag","document","createElement","src","onYouTubeIframeAPIReady","firstScriptTag","getElementsByTagName","parentNode","insertBefore","id","player","Player","videoId","events","onReady","onPlayerReady","onStateChange","onPlayerStateChange","event","target","render","this","loadVideoById","console","log","React","Component","request","theUrl","method","accessToken","params","Promise","resolve","reject","xmlHttp","XMLHttpRequest","onreadystatechange","readyState","status","JSON","parse","responseText","open","setRequestHeader","send","stringify","SpotifyApi","refreshToken","url","getNewAccessToken","access_token","_makeRequest","timeout","ms","setTimeout","SpotifyPlayer","update","a","getCurrentlyPlaying","currentlyPlaying","state","spotifyPlayer","updateYoutubePlayer","pauseSpotifyIfNearEnd","skipWhenVideoEnds","youtubePlayerState","spotifyApi","skip","updateYoutubePlayerState","data","is_playing","item","duration_ms","progress_ms","pause","isCurrentlyPlayingNew","getVideoIdFromCurrentlyPlaying","youtubeVideoId","waitForPlayerToPlay","songName","name","artistName","artists","undefined","result","lastSongId","currentlyPlayingId","setState","lastSong","SpotifyPlaylists","className","Container","styled","div","StyledPlaylist","Playlist","YoutubeMySpotify","current","onYoutubePlayerStateChange","ref","createRef","AccountSummaryContainer","StyledImage","Image","Name","h2","Info","p","InfoContainer","AccountSummary","profile","spotifyLogoutWindow","close","images","length","roundedCircle","display_name","followers","total","product","StoredUserContainer","ProfilePicture","DeleteAccount","setCurrentUser","currentUser","localStorage","setItem","getUsers","getItem","setUsers","users","StoredUser","preventBubble","e","cancelBubble","stopPropagation","deleteAccountHandler","userToDelete","newUsers","filter","user","deleteUser","updateUsers","useAccountHandler","history","push","onClick","withRouter","AccountManagerContainer","StyledButton","Button","AccountManager","storeCurrentUser","stayLoggedIn","newUserId","some","variant","map","index","key","location","href","getCurrentUserFromLocation","getStoredUsers","refresh_token","queryString","search","getProfile","userProfile","getUserProfile","HeaderContainer","HeaderText","StyledDropdown","Dropdown","DropdownButton","alignRight","Toggle","text","Menu","items","Object","keys","Item","onclick","Divider","Header","generateDropDownProps","generateItemsArrayFromUsers","App","loadCurrentUser","loadUsers","forceUpdate","path","ReactDOM","getElementById"],"mappings":"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","file":"static/js/main.6ce3a715.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nclass YoutubePlayer extends React.Component {\r\n  constructor(props){\r\n    super()\r\n  }\r\n\r\n  componentDidMount = () => {\r\n    // On mount, check to see if the API script is already loaded\r\n\r\n    if (!window.YT) { // If not, load the script asynchronously\r\n      const tag = document.createElement('script');\r\n      tag.src = 'https://www.youtube.com/iframe_api';\r\n\r\n      // onYouTubeIframeAPIReady will load the video after the script is loaded\r\n      window.onYouTubeIframeAPIReady = this.loadVideo;\r\n\r\n      const firstScriptTag = document.getElementsByTagName('script')[0];\r\n      firstScriptTag.parentNode.insertBefore(tag, firstScriptTag);\r\n\r\n    } else { // If script is already there, load the video directly\r\n      this.loadVideo();\r\n    }\r\n  };\r\n\r\n  loadVideo = () => {\r\n    const { id } = this.props;\r\n\r\n    // the Player object is created uniquely based on the id in props\r\n    this.player = new window.YT.Player(`youtube-player-${id}`, {\r\n      videoId: id,\r\n      events: {\r\n        onReady: this.onPlayerReady,\r\n        onStateChange: this.onPlayerStateChange\r\n      },\r\n    });\r\n  };\r\n\r\n  onPlayerStateChange = (event) => {\r\n    this.props.onPlayerStateChange(event);\r\n  }\r\n\r\n\r\n  onPlayerReady = event => {\r\n    this.player = event.target;\r\n  };\r\n\r\n  loadVideoById(id){\r\n    this.player.loadVideoById(id, 0);\r\n  }\r\n\r\n  isPlayerReady(){\r\n    console.log(this.player.loadVideoById)\r\n    return (!!this.player.loadVideoById);\r\n  }\r\n\r\n  render = () => {\r\n    const { id } = this.props;\r\n    return (\r\n      <div>\r\n        <div id={`youtube-player-${id}`} />\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default YoutubePlayer;\r\n","export default function request(theUrl, method, accessToken, params = null){\r\n    return new Promise((resolve, reject) => {\r\n        var xmlHttp = new XMLHttpRequest();\r\n        xmlHttp.onreadystatechange = function() {     \r\n            if (xmlHttp.readyState === 4 && (xmlHttp.status === 200)){\r\n                resolve(JSON.parse(xmlHttp.responseText));\r\n            }\r\n            if (xmlHttp.readyState === 4 && (xmlHttp.status === 204)){\r\n                resolve();\r\n            }\r\n            if (xmlHttp.readyState === 4){\r\n                reject(xmlHttp)\r\n            }\r\n        }\r\n\r\n        xmlHttp.open(method, theUrl, true); // true for asynchronous \r\n        if (accessToken){\r\n            xmlHttp.setRequestHeader('Authorization', 'Bearer ' + accessToken)\r\n        }\r\n        if (params){\r\n            xmlHttp.setRequestHeader('Content-Type', 'application/json');\r\n        }\r\n        xmlHttp.send(JSON.stringify(params));\r\n    })\r\n\r\n    //webby sux\r\n}\r\n","import request from \"./request\"\r\n\r\n\r\nexport default class SpotifyApi {\r\n    constructor(accessToken, refreshToken){\r\n        this.accessToken = accessToken;\r\n        this.refreshToken = refreshToken;\r\n    }\r\n\r\n    async _makeRequest(url, method, accessToken){\r\n        try{\r\n            return await request(url, method, accessToken);\r\n        }\r\n        catch (e) {\r\n            if (e.status === 401){\r\n                this.accessToken = (await this.getNewAccessToken(this.refreshToken)).access_token;\r\n                return request(url, method, this.accessToken);\r\n            }\r\n\r\n            throw e\r\n        }\r\n    }\r\n\r\n    getCurrentlyPlaying(){\r\n        return this._makeRequest('https://api.spotify.com/v1/me/player/currently-playing', 'GET', this.accessToken);\r\n    }\r\n\r\n    pause(){\r\n        return this._makeRequest('https://api.spotify.com/v1/me/player/pause', 'PUT', this.accessToken)\r\n    }\r\n\r\n    skip(){\r\n        return this._makeRequest('https://api.spotify.com/v1/me/player/next', 'POST', this.accessToken);\r\n    }\r\n\r\n    getProfile(){\r\n        return this._makeRequest('https://api.spotify.com/v1/me', 'GET', this.accessToken)\r\n    }\r\n\r\n    getNewAccessToken(refreshToken){\r\n        return request(`http://ec2-52-56-132-53.eu-west-2.compute.amazonaws.com:3000/refresh_token?refresh_token=${this.refreshToken}`, 'GET');\r\n    }\r\n}","export const timeout = (ms) => {\r\n  return new Promise((resolve) => {\r\n    setTimeout(() => {resolve()}, ms)\r\n  })\r\n}","import React from \"react\";\r\nimport SpotifyApi from '../../../api/spotifyApi'\r\nimport request from '../../../api/request'\r\nimport { timeout } from '../helpers'\r\n\r\nconst UPDATE_CURRENTLY_PLAYING_INTERVAL_MS = 1500;\r\nconst END_OF_SONG_BUFFER_MS = 15000\r\n\r\n\r\nclass SpotifyPlayer extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      spotifyPlayer: {\r\n        currentlyPlaying: {\r\n          \r\n        }\r\n      },\r\n      lastSong: ''\r\n    }\r\n\r\n    this.youtubePlayerState = -1;\r\n\r\n    const { accessToken, refreshToken } = props\r\n    this.spotifyApi = new SpotifyApi(accessToken, refreshToken)\r\n  }\r\n  \r\n  async componentDidMount() {\r\n    this.update();\r\n  }\r\n\r\n  update = async () => {\r\n    try{\r\n      await this.getCurrentlyPlaying();\r\n      \r\n      const { spotifyPlayer: { currentlyPlaying }} = this.state;\r\n      \r\n      if(currentlyPlaying){\r\n        await this.updateYoutubePlayer(currentlyPlaying)\r\n        await this.pauseSpotifyIfNearEnd(currentlyPlaying)\r\n      }\r\n  \r\n      await this.skipWhenVideoEnds();\r\n  \r\n      await timeout(UPDATE_CURRENTLY_PLAYING_INTERVAL_MS);\r\n    }\r\n    catch(e){\r\n      console.log('e', e)\r\n    }\r\n    finally{\r\n      this.update(); \r\n    }\r\n  }\r\n\r\n  skipWhenVideoEnds = async () => {\r\n    console.log(this.youtubePlayerState);\r\n    if(this.youtubePlayerState === 0){\r\n      await this.spotifyApi.skip();\r\n    }\r\n  }\r\n\r\n  updateYoutubePlayerState = (event) => {\r\n    this.youtubePlayerState = event.data;\r\n  }\r\n\r\n  pauseSpotifyIfNearEnd = async (currentlyPlaying) => {\r\n    if (!currentlyPlaying.is_playing) {\r\n      return;\r\n    }\r\n\r\n    if (currentlyPlaying.item.duration_ms - currentlyPlaying.progress_ms < END_OF_SONG_BUFFER_MS) {\r\n        this.spotifyApi.pause();\r\n    }\r\n  }\r\n\r\n  updateYoutubePlayer = async (currentlyPlaying) => {\r\n    if (this.isCurrentlyPlayingNew(currentlyPlaying)){\r\n      const youtubeVideoId = await this.getVideoIdFromCurrentlyPlaying(currentlyPlaying);\r\n      this.props.updateYoutubePlayer(youtubeVideoId)\r\n      await this.waitForPlayerToPlay();\r\n    }\r\n  }\r\n\r\n  waitForPlayerToPlay = async () => {\r\n    if(this.youtubePlayerState !== 1){\r\n      await timeout(50);\r\n      await this.waitForPlayerToPlay();\r\n    }\r\n  }\r\n\r\n  getVideoIdFromCurrentlyPlaying = async (currentlyPlaying) => {\r\n    const songName = currentlyPlaying.item.name;\r\n    const artistName = currentlyPlaying.item.artists[0].name;\r\n\r\n    console.log(songName, artistName);\r\n\r\n    const result = await request('http://localhost:3000/getVideoId', 'POST', undefined, {\r\n      songName,\r\n      artistName\r\n    });\r\n\r\n    console.log(result)\r\n\r\n    return result.videoId;\r\n}\r\n\r\n  isCurrentlyPlayingNew = (currentlyPlaying) => {\r\n    if (currentlyPlaying === {}) {\r\n        return false;\r\n    }\r\n\r\n    const { lastSongId } = this.state;\r\n    const { item: { id: currentlyPlayingId }} = currentlyPlaying;\r\n\r\n    if (lastSongId != currentlyPlayingId) {\r\n        this.setState({lastSongId: currentlyPlayingId})\r\n        return true;\r\n    }\r\n\r\n    return false;\r\n}\r\n\r\n  getCurrentlyPlaying = async () => {\r\n    const { spotifyPlayer } = this.state;  \r\n    const currentlyPlaying = (await this.spotifyApi.getCurrentlyPlaying()) || {};\r\n    \r\n    spotifyPlayer.currentlyPlaying = currentlyPlaying;\r\n    this.setState({\r\n      spotifyPlayer\r\n    })\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n      <div>\r\n        <div>{JSON.stringify(this.state.spotifyPlayer.currentlyPlaying)}</div>\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default SpotifyPlayer;\r\n","import React from \"react\";\r\n\r\nclass SpotifyPlaylists extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n\r\n  render = () => {\r\n    const { className } = this.props;\r\n    console.log(className)\r\n    \r\n    return (\r\n      <div className={className}>\r\n        some playlist\r\n      </div>\r\n    );\r\n  };\r\n}\r\n\r\nexport default SpotifyPlaylists;\r\n","import styled from 'styled-components'\r\nimport Playlist from '../Playlist'\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n`\r\n\r\nexport const StyledPlaylist = styled(Playlist)`\r\n    && {\r\n        flex-grow: 1;\r\n        color: red;\r\n    }\r\n`","import React from \"react\";\r\nimport { Container, StyledPlaylist as Playlist } from './styled'\r\n\r\nclass SpotifyPlaylists extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n      <Container>\r\n        <Playlist className='hello'/>\r\n        <Playlist className='hello'/>\r\n        <Playlist className='hello'/>\r\n      </Container>\r\n    );\r\n  };\r\n}\r\n\r\nexport default SpotifyPlaylists;\r\n","import styled from 'styled-components'\r\n\r\nexport const Container = styled.div`\r\n    display: flex;\r\n    flex-direction: column;\r\n`","import React from \"react\";\r\nimport YoutubePlayer from './YoutubePlayer'\r\nimport SpotifyPlayer from './SpotifyPlayer'\r\nimport { timeout } from './helpers'\r\nimport SpotifyPlaylists from './SpotifyPlaylists'\r\nimport { Container } from './styled'\r\n\r\nclass YoutubeMySpotify extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.YoutubePlayer = React.createRef();\r\n    this.SpotifyPlayer = React.createRef();\r\n  }\r\n\r\n  updateYoutubePlayer = async (id) => {\r\n    try{\r\n      this.YoutubePlayer.current.loadVideoById(id);\r\n    }\r\n    catch(e){\r\n      await timeout(10);\r\n      this.updateYoutubePlayer(id);\r\n    }\r\n  }\r\n\r\n  onYoutubePlayerStateChange = (event) => {\r\n    this.SpotifyPlayer.current.updateYoutubePlayerState(event);\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n      <Container>\r\n        <YoutubePlayer ref={this.YoutubePlayer} onPlayerStateChange={this.onYoutubePlayerStateChange} id=\"iAtomM7ybOM\" />\r\n        {/* <YoutubePlayer ref={this.player} id=\"iAtomM7ybOM\" /> */}\r\n        <SpotifyPlayer {...this.props} ref={this.SpotifyPlayer} updateYoutubePlayer={this.updateYoutubePlayer}></SpotifyPlayer>\r\n        {/* <SpotifyPlayer {...this.props}></SpotifyPlayer> */}\r\n        <SpotifyPlaylists />\r\n      </Container>\r\n    );\r\n  };\r\n}\r\n\r\nexport default YoutubeMySpotify;\r\n","import styled from 'styled-components'\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nexport const AccountSummaryContainer = styled.div`\r\n    text-align: center\r\n`\r\n\r\nexport const StyledImage = styled(Image)`\r\n    height: 200px;\r\n    width: 200px;\r\n`\r\n\r\nexport const Name = styled.h2`\r\n    margin: 10px;\r\n`\r\n\r\nexport const Info = styled.p`\r\n    display: inline;\r\n    margin: 5px;\r\n    color: grey;\r\n`\r\n\r\nexport const InfoContainer = styled.p`\r\n    color: grey;\r\n`\r\n","import React from \"react\";\r\nimport { AccountSummaryContainer, StyledImage as Image, Name, Info, InfoContainer } from \"./styled\"\r\nimport request from \"../../../api/request\";\r\n\r\nclass AccountSummary extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n\r\n  render = () => {\r\n    const { profile } = this.props\r\n\r\n    const url = 'https://www.spotify.com/logout/'                                                                                                                                                                                                                                                                               \r\n    const spotifyLogoutWindow = window.open(url, 'Spotify Logout', 'width=700,height=500,top=40,left=40')                                                                                                \r\n    setTimeout(() => spotifyLogoutWindow.close(), 2000)\r\n    console.log('logged out')\r\n\r\n    return (\r\n      <AccountSummaryContainer>\r\n        <Image src={profile.images.length ? profile.images[0].url : 'https://pmcdeadline2.files.wordpress.com/2019/10/shutterstock_editorial_10434333bm.jpg?crop=0px%2C0px%2C2903px%2C1627px&resize=681%2C383'} roundedCircle />\r\n        <Name>{profile.display_name}</Name>\r\n        <InfoContainer>\r\n          <Info>{profile.followers.total} followers</Info> | <Info>{profile.product === 'premium' ? 'Premium' : 'Free Account'}</Info>\r\n        </InfoContainer>\r\n      </AccountSummaryContainer>\r\n    );\r\n  };\r\n}\r\n\r\nexport default AccountSummary;\r\n","import styled from 'styled-components'\r\nimport Image from \"react-bootstrap/Image\";\r\n\r\nexport const StoredUserContainer = styled.div`\r\n    border: 2px solid #888; \r\n    max-width: 350px;\r\n    overflow: auto;\r\n    text-align: left;\r\n    margin: auto;\r\n    border-radius: 5px;\r\n\r\n    &:hover {\r\n        box-shadow: 2px 2px #555;\r\n    }\r\n`\r\n\r\nexport const ProfilePicture = styled(Image)`\r\n    display: inline-block;\r\n    height: 60px;\r\n    width: 60px;\r\n    margin: 10px 15px;\r\n    float: left;\r\n`\r\n\r\nexport const Name = styled.p`\r\n    display: inline-block;\r\n    margin: 23px 0px;\r\n\r\n`\r\n\r\nexport const DeleteAccount = styled.div`\r\n    display: inline-block;\r\n    width: 20px;\r\n    height: 20px;\r\n    float: right;\r\n\r\n    &:hover {\r\n        color: red; // <Thing> when hovered\r\n    }\r\n`\r\n","export const setCurrentUser = (currentUser) => {\r\n    window.localStorage.setItem('currentUser', JSON.stringify(currentUser));\r\n}\r\n\r\nexport const deleteUser = (userToDelete) => {\r\n    const users = getUsers();\r\n    const newUsers = users.filter(user => user.profile.id !== userToDelete.profile.id)\r\n    setUsers(newUsers);\r\n}\r\n\r\nexport const getUsers = () => {\r\n    return JSON.parse(window.localStorage.getItem('users')) || [];\r\n}\r\n\r\nexport const setUsers = (users) => {\r\n    window.localStorage.setItem('users', JSON.stringify(users));\r\n}\r\n\r\n","import React from \"react\";\r\nimport { StoredUserContainer, ProfilePicture, Name, DeleteAccount } from './styled'\r\nimport { setCurrentUser, deleteUser } from '../helpers'\r\nimport { withRouter } from 'react-router-dom'\r\n\r\n\r\nclass StoredUser extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n\r\n  preventBubble = (e = window.event) => {\r\n    e.cancelBubble = true;\r\n    if (e.stopPropagation) e.stopPropagation();\r\n  }\r\n\r\n  deleteAccountHandler = (e) => {\r\n    this.preventBubble(e)\r\n    deleteUser(this.props.user)\r\n    this.props.updateUsers();\r\n  }\r\n\r\n  useAccountHandler = (e) => {\r\n    setCurrentUser(this.props.user)\r\n    this.props.history.push(\"/YoutubeMySpotify\");\r\n  }\r\n\r\n  render = () => {\r\n    const { profile } = this.props.user;\r\n\r\n    return (\r\n      <StoredUserContainer onClick={this.useAccountHandler}>\r\n        <ProfilePicture src={profile.images.length ? profile.images[0].url : 'https://pmcdeadline2.files.wordpress.com/2019/10/shutterstock_editorial_10434333bm.jpg?crop=0px%2C0px%2C2903px%2C1627px&resize=681%2C383'} roundedCircle />\r\n        <Name>{profile.display_name}</Name>\r\n        <DeleteAccount onClick={this.deleteAccountHandler}>x</DeleteAccount>\r\n      </StoredUserContainer>\r\n    );\r\n  };\r\n}\r\n\r\nexport default withRouter(StoredUser);\r\n","import styled from 'styled-components'\r\nimport Button from 'react-bootstrap/Button'\r\n\r\nexport const AccountManagerContainer = styled.div`\r\n    margin: 80px;\r\n    text-align: center\r\n`\r\n\r\nexport const StyledButton = styled(Button)`\r\n    margin: 15px 5px;\r\n`","import React from \"react\";\r\nimport { LOGIN_URL } from '../../constants';\r\nimport queryString from 'query-string';\r\nimport { withRouter } from 'react-router-dom'\r\nimport SpotifyApi from '../../api/spotifyApi'\r\nimport AccountSummary from \"./AccountSummary\"\r\nimport StoredUser from \"./StoredUser\"\r\nimport { StyledButton as Button } from \"./styled\"\r\nimport { setCurrentUser, getUsers, setUsers } from './helpers'\r\n\r\nclass AccountManager extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n    this.state = {\r\n      currentUser: this.getCurrentUserFromLocation(props.location),\r\n      users: this.getStoredUsers()\r\n    }\r\n\r\n    this.spotifyApi = new SpotifyApi(this.state.currentUser.accessToken, this.state.currentUser.refresh_token)\r\n  }\r\n\r\n  updateUsers = () => {\r\n    this.setState({users: getUsers()})\r\n    this.props.updateUsers();\r\n  }\r\n\r\n  getStoredUsers(){\r\n    const users = getUsers();\r\n    return users;\r\n  }\r\n\r\n  getCurrentUserFromLocation(location){\r\n    const params = queryString.parse(location.search);\r\n    const {access_token, refresh_token} = params\r\n    return {\r\n      accessToken: access_token,\r\n      refreshToken: refresh_token\r\n    }\r\n  }\r\n\r\n  async getUserProfile(){\r\n    if(!this.spotifyApi.accessToken){\r\n      return\r\n    }\r\n\r\n    const userProfile = await this.spotifyApi.getProfile();\r\n    \r\n    const { currentUser } = this.state;\r\n    currentUser.profile = userProfile\r\n    \r\n    this.setState({ currentUser });\r\n  }\r\n\r\n  async componentDidMount() {\r\n    this.getUserProfile()\r\n  }\r\n\r\n\r\n  storeCurrentUser = (stayLoggedIn) => {\r\n    const { currentUser, users } = this.state;\r\n\r\n    if(stayLoggedIn){\r\n      const newUserId = currentUser.profile.id\r\n\r\n      if (!users.some(user => user.profile.id === newUserId)){\r\n        users.push(currentUser);\r\n        this.setState({users})\r\n      }\r\n    }\r\n\r\n    setCurrentUser(currentUser);\r\n    setUsers(users)\r\n\r\n    this.props.updateUsers()\r\n    this.props.history.push(\"/YoutubeMySpotify\");\r\n  }\r\n\r\n  render = () => {\r\n    const { currentUser, users } = this.state;\r\n    \r\n    if (currentUser.refreshToken && currentUser.profile){\r\n      return (\r\n        <div>\r\n          <p>Would you like to stay logged in?</p>\r\n          <br />\r\n          <AccountSummary {...currentUser} />\r\n          <Button variant=\"secondary\" onClick={() => this.storeCurrentUser(false)}>No Thanks</Button>\r\n          <Button onClick={() => this.storeCurrentUser(true)}>Yes Please!</Button>\r\n        </div>\r\n      )\r\n    }\r\n    else{\r\n      return (\r\n        <div>\r\n\r\n          <p>{users.length ? 'Your saved accounts...' : 'No Accounts'}</p>\r\n          {users.map((user, index) => <StoredUser user={user} updateUsers={this.updateUsers} key={index}/>)}\r\n          <br />\r\n          <Button onClick={() => window.location.href = LOGIN_URL}>Add a new Account</Button>\r\n        \r\n        </div>\r\n      )\r\n    }\r\n  };\r\n}\r\n\r\nexport default withRouter(AccountManager);\r\n","export const LOGIN_URL = 'http://ec2-52-56-132-53.eu-west-2.compute.amazonaws.com:3000/login';","import styled from 'styled-components'\r\n\r\nexport const HeaderContainer = styled.div`\r\n    padding: 9px;\r\n    background-color: black;\r\n`\r\n\r\nexport const HeaderText = styled.p`\r\n    margin: 0;\r\n    display: inline;    \r\n`\r\n","import styled from 'styled-components'\r\nimport Dropdown from \"react-bootstrap/Dropdown\";\r\n\r\nexport const StyledDropdown = styled(Dropdown)`\r\n    display: inline;    \r\n    float: right;\r\n    margin: -8px;\r\n`","import React from \"react\";\r\nimport { StyledDropdown as Dropdown } from \"./styled\";\r\n\r\n\r\n/*\r\nprops: {\r\n    variant: 'success',\r\n    text: 'Dropdown Button',\r\n    items: [\r\n        href: './', --want to do on click here or something\r\n        text: 'hello world',\r\n    ]\r\n}\r\n*/\r\nfunction DropdownButton (props){\r\n    return (\r\n      <Dropdown alignRight>\r\n        <Dropdown.Toggle variant={props.variant} id=\"dropdown-basic\">\r\n          {props.text}\r\n        </Dropdown.Toggle>\r\n\r\n        <Dropdown.Menu>\r\n          {props.items.map((item, index) => {\r\n            return Object.keys(item).length\r\n              ? <Dropdown.Item onClick={item.onclick} key={index}>{item.text}</Dropdown.Item>\r\n              : <Dropdown.Divider key={index} />\r\n          })}\r\n        </Dropdown.Menu>\r\n      </Dropdown>\r\n    );\r\n\r\n}\r\n\r\nexport default DropdownButton;\r\n","import React from \"react\";\r\nimport { HeaderContainer, HeaderText } from \"./styled\";\r\nimport DropdownButton from \"./DropdownButton\"\r\nimport { withRouter } from 'react-router-dom'\r\n\r\nclass Header extends React.Component {\r\n  constructor(props) {\r\n    super();\r\n  }\r\n\r\n  generateDropDownProps(){\r\n    return {\r\n      variant: 'secondary',\r\n      text: 'Account',\r\n      items: this.generateItemsArrayFromUsers()\r\n    }\r\n  }\r\n\r\n  generateItemsArrayFromUsers(){\r\n    const items = this.props.users.map(user => {\r\n      return {\r\n        href: '/',\r\n        text: user.profile.display_name\r\n      } \r\n    })\r\n\r\n    items.push({}) //divider\r\n    items.push({\r\n        onclick: () => {\r\n          this.props.history.push(\"/AccountManager\");\r\n        },\r\n        text: 'Account Manager'\r\n      }\r\n    )\r\n\r\n    return items;\r\n  }\r\n\r\n  render = () => {\r\n    return (\r\n      <HeaderContainer>\r\n        <HeaderText onClick={() => window.location = '/'}>Youtube My Spotify</HeaderText>\r\n        <DropdownButton {...this.generateDropDownProps()}></DropdownButton>\r\n      </HeaderContainer>\r\n    );\r\n  };\r\n}\r\n\r\nexport default withRouter(Header);\r\n","import React from \"react\";\r\nimport YoutubeMySpotify from \"./components/YoutubeMySpotify\";\r\nimport AccountManager from \"./components/AccountManager\";\r\nimport Header from \"./components/Header/index.js\";\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\nimport { HashRouter as Router, Switch, Route } from \"react-router-dom\";\r\nimport { AccountManagerContainer } from \"./components/AccountManager/styled\";\r\n\r\nclass App extends React.Component {\r\n  constructor() {\r\n    super();\r\n    this.player = React.createRef();\r\n    this.state = {\r\n      currentUser: this.loadCurrentUser(),\r\n      users: this.loadUsers()\r\n    };\r\n  }\r\n\r\n  updateUsers = () => {\r\n    this.setState({ currentUser: this.loadCurrentUser() });\r\n    this.setState({ users: this.loadUsers() });\r\n    this.forceUpdate();\r\n  };\r\n\r\n  loadCurrentUser() {\r\n    return JSON.parse(window.localStorage.getItem(\"currentUser\"));\r\n  }\r\n\r\n  loadUsers() {\r\n    return JSON.parse(window.localStorage.getItem(\"users\")) || [];\r\n  }\r\n\r\n  loadVideoById = id => {\r\n    this.player.current.loadVideoById(id);\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        {/* https://www.youtube.com/watch?v=1wDzEjXbblM */}\r\n        <Router>\r\n          <Header {...this.state}></Header>\r\n          gh-pages\r\n          <Switch>\r\n            <Route path=\"/YoutubeMySpotify\">\r\n              <YoutubeMySpotify {...this.state.currentUser} />\r\n            </Route>\r\n            <Route path=\"/AccountManager\">\r\n              <AccountManagerContainer>\r\n                <AccountManager updateUsers={() => this.updateUsers()} />\r\n              </AccountManagerContainer>\r\n            </Route>\r\n          </Switch>\r\n        </Router>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\n\r\nReactDOM.render(<App />, document.getElementById('root'));\r\n\r\n"],"sourceRoot":""}